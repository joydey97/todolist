{"version":3,"sources":["components/form.js","components/Todo.js","components/TodoList.js","App.js","reportWebVitals.js","index.js"],"names":["Form","inputText","setInputText","setTodos","Todos","setSatus","value","onChange","e","target","type","className","onClick","preventDefault","text","completed","id","Math","random","name","Todo","todo","map","item","console","log","filter","el","TodoList","fileteredTodos","App","useState","status","setStatus","setFilteredTodos","useEffect","getLocalTodos","fileterHandler","saveLocalTodos","localStorage","setItem","JSON","stringify","getItem","todoLocal","parse","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7e93a572.chunk.js","sourcesContent":["import React from 'react';\r\n\r\n\r\nconst Form = ({inputText,setInputText ,setTodos,Todos,setSatus}) => {\r\n\r\n    const inputTextHandler = (e) => {\r\n        \r\n        setInputText(e.target.value);\r\n    };\r\n    const submitHandler = (e) => {\r\n         e.preventDefault();\r\n         setTodos([\r\n             ...Todos, \r\n             {text : inputText, completed: false, id: Math.random()*1000}\r\n         ]);\r\n        setInputText(\"\");\r\n        \r\n    };\r\nconst statusHandler = (e) => {\r\n  setSatus(e.target.value);\r\n}\r\n    \r\n    return(\r\n        <form>\r\n        <input value ={inputText} onChange={inputTextHandler} type=\"text\" className=\"todo-input\" />\r\n        <button onClick={submitHandler} className=\"todo-button\" type=\"submit\">\r\n         <i className=\"fas fa-plus-square\"></i>\r\n         </button>\r\n        <div className=\"select\">\r\n        <select onChange= {statusHandler} name=\"todos\" className=\"filter-todo\">\r\n          <option value=\"all\">All</option>\r\n          <option value=\"completed\">Completed</option>\r\n          <option value=\"uncompleted\">Uncompleted</option>\r\n        </select>\r\n      </div>\r\n    </form>\r\n\r\n    );\r\n}\r\nexport default Form;","import React from 'react';\r\n\r\n\r\n\r\nconst Todo = ({text,Todos,setTodos,todo}) => {\r\n\r\nconst deleteHandler = () =>{\r\n   setTodos(Todos.filter((el) => el.id !== todo.id));\r\n   console.log(todo);\r\n}\r\n\r\n\r\nconst completeHandler = () => \r\n{\r\n    setTodos(Todos.map((item) => {\r\n        if(item.id === todo.id)\r\n            \r\n            return{...item,\r\n                completed: !item.completed,\r\n                    };\r\n        return item;\r\n        \r\n\r\n    }\r\n    ));\r\n    console.log(todo);\r\n}\r\n            return(\r\n                      <div className=\"todo\">\r\n                          \r\n                          <li className={`todo-item ${todo.completed ? \"completed\" : \"\"}` }>{text} </li>\r\n                          \r\n                          \r\n                          <button onClick={completeHandler} className=\"complete-btn\"> \r\n                              <i className=\"fas fa-check\" >\r\n                              </i> </button>\r\n                          \r\n                          \r\n                          <button onClick={deleteHandler} className=\"trash-btn\" >\r\n                              <i className=\"fas fa-trash\" >\r\n                              </i></button>\r\n                      \r\n                      </div>\r\n                );\r\n    \r\n    \r\n};\r\nexport default Todo;","import React from 'react';\r\nimport Todo from './Todo';\r\n\r\n\r\nconst TodoList = ({inputText,setInputText ,setTodos,Todos,fileteredTodos}) => {\r\n\r\n\r\n\r\n            return(\r\n                        <div className=\"todo-container\">\r\n                        <ul className=\"todo-list\">\r\n                       {fileteredTodos.map(todo =>(\r\n                               <Todo \r\n                                Todos = {Todos}\r\n                                setTodos = {setTodos} \r\n                                key={todo.id}\r\n                                text={todo.text}\r\n                                id={todo.id}\r\n                                todo={todo}\r\n                                />\r\n                       ))}\r\n                        </ul>\r\n                        </div>\r\n                );\r\n    \r\n    \r\n};\r\nexport default TodoList;","import React,{useState,useEffect} from \"react\";\nimport './App.css';\nimport Form from \"./components/form\";\nimport TodoList from \"./components/TodoList\";\n\n\nfunction App() {\n \n  const [inputText, setInputText] = useState(\"\");\n\n  const [Todos, setTodos] = useState([]);\n  const[status, setStatus] = useState('all');\n  const[fileteredTodos, setFilteredTodos] = useState([]);\n\n  useEffect(() => {\n    getLocalTodos();\n  },[]);\n\n\n  useEffect(()=>{\n    fileterHandler();\n    saveLocalTodos();\n     \n   }, [Todos,status]);\n\n\n  const fileterHandler = () =>{\n  switch(status){\n    case 'completed':\n      setFilteredTodos(Todos.filter(todo => todo.completed === true))\n    break;\n    case 'uncompleted':\n      setFilteredTodos(Todos.filter(todo => todo.completed === false))\n    break;\n    default:\n      setFilteredTodos(Todos)\n     break;\n    \n  }\n};\n\n\n//SAVE TO LOCAL STORAGE\n\nconst saveLocalTodos = () => {\n  \n    localStorage.setItem(\"Todos\", JSON.stringify(Todos));\n   \n}\n\n\nconst getLocalTodos = () =>{\n  if(localStorage.getItem(\"Todos\") === null){\n    localStorage.setItem(\"Todos\", JSON.stringify([]));\n   }\n   else{\n    let todoLocal= JSON.parse(localStorage.getItem(\"Todos\"));\n   setTodos(todoLocal);\n  }\n};\n\n\n  return (\n    <div className=\"App\">\n      <header><h1>To do list </h1></header>\n      <Form \n      inputText={inputText} \n      Todos = {Todos} \n      setTodos = {setTodos} \n      setInputText= {setInputText}\n      setSatus = {setStatus}\n      \n      />\n      \n      <TodoList \n      inputText={inputText} \n      Todos = {Todos} \n      setTodos = {setTodos} \n      setInputText= {setInputText} \n      fileteredTodos = {fileteredTodos}\n      />\n      \n      \n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}